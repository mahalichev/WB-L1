package main

import (
	"fmt"
	"slices"
)

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏
func OwnReverse(original string) string {
	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ slice —Ä—É–Ω
	result := []rune(original)

	// –î–æ —Å–µ—Ä–µ–¥–∏–Ω—ã slice –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å –Ω–∞—á–∞–ª–∞ slice —Å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —ç–ª–µ–º–µ–Ω—Ç–æ–º —Å –∫–æ–Ω—Ü–∞ slice
	n := len(result)
	for i := 0; i < n/2; i++ {
		result[i], result[n-i-1] = result[n-i-1], result[i]
	}
	return string(result)
}

// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ—Ä–∞—á–∏–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø–∞–∫–µ—Ç–∞ slices
func SlicesReverse(original string) string {
	// –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –≤ slice —Ä—É–Ω
	result := []rune(original)

	// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ slices.Reverse() –¥–ª—è slice —Ä—É–Ω
	slices.Reverse(result)
	return string(result)
}

func main() {
	input := "ü¢Ü123–¢–µ—Å—Çü§°"
	fmt.Println(OwnReverse(input))
	fmt.Println(SlicesReverse(input))
}
